/***
 * THIS FILE IS AUTOMATICALLY GENERATED
 * Do not edit this file. It will be overwritten when the configure script is run.
 ***/

constexpr static std::size_t NUM_REPLACEMENT_MODULES = 4;
constexpr static unsigned long long rreplacementDdrrip = 1ull << 0;
constexpr static unsigned long long rreplacementDlru   = 1ull << 1;
constexpr static unsigned long long rreplacementDship  = 1ull << 2;
constexpr static unsigned long long rreplacementDsrrip = 1ull << 3;

[[]] void repl_replacementDdrrip_initialize_replacement();
[[]] void repl_replacementDlru_initialize_replacement();
[[]] void repl_replacementDship_initialize_replacement();
[[]] void repl_replacementDsrrip_initialize_replacement();
[[]] void impl_initialize_replacement();

[[nodiscard]] uint32_t repl_replacementDdrrip_find_victim(uint32_t, uint64_t, uint32_t, const BLOCK*, uint64_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t repl_replacementDlru_find_victim(uint32_t, uint64_t, uint32_t, const BLOCK*, uint64_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t repl_replacementDship_find_victim(uint32_t, uint64_t, uint32_t, const BLOCK*, uint64_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t repl_replacementDsrrip_find_victim(uint32_t, uint64_t, uint32_t, const BLOCK*, uint64_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t impl_find_victim(uint32_t, uint64_t, uint32_t, const BLOCK*, uint64_t, uint64_t, uint32_t);

[[]] void repl_replacementDdrrip_update_replacement_state(uint32_t, uint32_t, uint32_t, uint64_t, uint64_t, uint64_t, uint32_t, uint8_t);
[[]] void repl_replacementDlru_update_replacement_state(uint32_t, uint32_t, uint32_t, uint64_t, uint64_t, uint64_t, uint32_t, uint8_t);
[[]] void repl_replacementDship_update_replacement_state(uint32_t, uint32_t, uint32_t, uint64_t, uint64_t, uint64_t, uint32_t, uint8_t);
[[]] void repl_replacementDsrrip_update_replacement_state(uint32_t, uint32_t, uint32_t, uint64_t, uint64_t, uint64_t, uint32_t, uint8_t);
[[]] void impl_update_replacement_state(uint32_t, uint32_t, uint32_t, uint64_t, uint64_t, uint64_t, uint32_t, uint8_t);

[[]] void repl_replacementDdrrip_replacement_final_stats();
[[]] void repl_replacementDlru_replacement_final_stats();
[[]] void repl_replacementDship_replacement_final_stats();
[[]] void repl_replacementDsrrip_replacement_final_stats();
[[]] void impl_replacement_final_stats();

constexpr static std::size_t NUM_PREFETCH_MODULES = 38;
constexpr static unsigned long long pprefetcherD1offset                  = 1ull << 0;
constexpr static unsigned long long pprefetcherD2offset                  = 1ull << 1;
constexpr static unsigned long long pprefetcherD3offset                  = 1ull << 2;
constexpr static unsigned long long pprefetcherD4offset                  = 1ull << 3;
constexpr static unsigned long long pprefetcherDberti                    = 1ull << 4;
constexpr static unsigned long long pprefetcherDbingo                    = 1ull << 5;
constexpr static unsigned long long pprefetcherDdspatch                  = 1ull << 6;
constexpr static unsigned long long pprefetcherDgaze                     = 1ull << 7;
constexpr static unsigned long long pprefetcherDgaze_analysis_pht        = 1ull << 8;
constexpr static unsigned long long pprefetcherDgaze_analysis_pht4ss     = 1ull << 9;
constexpr static unsigned long long pprefetcherDgaze_analysis_sm4ss      = 1ull << 10;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_pht1024 = 1ull << 11;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_pht128  = 1ull << 12;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_pht256  = 1ull << 13;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_pht512  = 1ull << 14;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_rs16KB  = 1ull << 15;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_rs1KB   = 1ull << 16;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_rs2KB   = 1ull << 17;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_rs32KB  = 1ull << 18;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_rs512B  = 1ull << 19;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_rs64KB  = 1ull << 20;
constexpr static unsigned long long pprefetcherDgaze_sensitivity_rs8KB   = 1ull << 21;
constexpr static unsigned long long pprefetcherDgaze_ssonly              = 1ull << 22;
constexpr static unsigned long long pprefetcherDghb                      = 1ull << 23;
constexpr static unsigned long long pprefetcherDip_stride                = 1ull << 24;
constexpr static unsigned long long pprefetcherDipcp_l1                  = 1ull << 25;
constexpr static unsigned long long pprefetcherDipcp_l2                  = 1ull << 26;
constexpr static unsigned long long pprefetcherDnext_line                = 1ull << 27;
constexpr static unsigned long long pprefetcherDnext_line_instr          = 1ull << 28;
constexpr static unsigned long long pprefetcherDno                       = 1ull << 29;
constexpr static unsigned long long pprefetcherDno_instr                 = 1ull << 30;
constexpr static unsigned long long pprefetcherDpc                       = 1ull << 31;
constexpr static unsigned long long pprefetcherDpmp                      = 1ull << 32;
constexpr static unsigned long long pprefetcherDregion_num               = 1ull << 33;
constexpr static unsigned long long pprefetcherDsms                      = 1ull << 34;
constexpr static unsigned long long pprefetcherDspp_dev                  = 1ull << 35;
constexpr static unsigned long long pprefetcherDspp_ppf                  = 1ull << 36;
constexpr static unsigned long long pprefetcherDva_ampm_lite             = 1ull << 37;

[[]] void pref_prefetcherD1offset_prefetcher_initialize();
[[]] void pref_prefetcherD2offset_prefetcher_initialize();
[[]] void pref_prefetcherD3offset_prefetcher_initialize();
[[]] void pref_prefetcherD4offset_prefetcher_initialize();
[[]] void pref_prefetcherDberti_prefetcher_initialize();
[[]] void pref_prefetcherDbingo_prefetcher_initialize();
[[]] void pref_prefetcherDdspatch_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_analysis_pht_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_analysis_pht4ss_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_analysis_sm4ss_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_pht1024_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_pht128_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_pht256_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_pht512_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_rs16KB_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_rs1KB_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_rs2KB_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_rs32KB_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_rs512B_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_rs64KB_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_sensitivity_rs8KB_prefetcher_initialize();
[[]] void pref_prefetcherDgaze_ssonly_prefetcher_initialize();
[[]] void pref_prefetcherDghb_prefetcher_initialize();
[[]] void pref_prefetcherDip_stride_prefetcher_initialize();
[[]] void pref_prefetcherDipcp_l1_prefetcher_initialize();
[[]] void pref_prefetcherDipcp_l2_prefetcher_initialize();
[[]] void pref_prefetcherDnext_line_prefetcher_initialize();
[[]] void ipref_prefetcherDnext_line_instr_prefetcher_initialize();
[[]] void pref_prefetcherDno_prefetcher_initialize();
[[]] void ipref_prefetcherDno_instr_prefetcher_initialize();
[[]] void pref_prefetcherDpc_prefetcher_initialize();
[[]] void pref_prefetcherDpmp_prefetcher_initialize();
[[]] void pref_prefetcherDregion_num_prefetcher_initialize();
[[]] void pref_prefetcherDsms_prefetcher_initialize();
[[]] void pref_prefetcherDspp_dev_prefetcher_initialize();
[[]] void pref_prefetcherDspp_ppf_prefetcher_initialize();
[[]] void pref_prefetcherDva_ampm_lite_prefetcher_initialize();
[[]] void impl_prefetcher_initialize();

[[nodiscard]] uint32_t pref_prefetcherD1offset_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherD2offset_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherD3offset_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherD4offset_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDberti_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDbingo_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDdspatch_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_analysis_pht_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_analysis_pht4ss_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_analysis_sm4ss_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_pht1024_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_pht128_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_pht256_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_pht512_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs16KB_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs1KB_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs2KB_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs32KB_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs512B_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs64KB_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs8KB_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_ssonly_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDghb_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDip_stride_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDipcp_l1_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDipcp_l2_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDnext_line_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t ipref_prefetcherDnext_line_instr_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDno_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t ipref_prefetcherDno_instr_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDpc_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDpmp_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDregion_num_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDsms_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDspp_dev_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDspp_ppf_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDva_ampm_lite_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);
[[nodiscard]] uint32_t impl_prefetcher_cache_operate(uint64_t, uint64_t, uint8_t, uint8_t, uint32_t);

[[nodiscard]] uint32_t pref_prefetcherD1offset_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherD2offset_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherD3offset_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherD4offset_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDberti_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDbingo_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDdspatch_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_analysis_pht_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_analysis_pht4ss_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_analysis_sm4ss_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_pht1024_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_pht128_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_pht256_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_pht512_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs16KB_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs1KB_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs2KB_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs32KB_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs512B_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs64KB_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_sensitivity_rs8KB_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDgaze_ssonly_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDghb_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDip_stride_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDipcp_l1_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDipcp_l2_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDnext_line_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t ipref_prefetcherDnext_line_instr_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDno_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t ipref_prefetcherDno_instr_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDpc_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDpmp_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDregion_num_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDsms_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDspp_dev_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDspp_ppf_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t pref_prefetcherDva_ampm_lite_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);
[[nodiscard]] uint32_t impl_prefetcher_cache_fill(uint64_t, uint32_t, uint32_t, uint8_t, uint64_t, uint32_t);

[[]] void pref_prefetcherD1offset_prefetcher_cycle_operate();
[[]] void pref_prefetcherD2offset_prefetcher_cycle_operate();
[[]] void pref_prefetcherD3offset_prefetcher_cycle_operate();
[[]] void pref_prefetcherD4offset_prefetcher_cycle_operate();
[[]] void pref_prefetcherDberti_prefetcher_cycle_operate();
[[]] void pref_prefetcherDbingo_prefetcher_cycle_operate();
[[]] void pref_prefetcherDdspatch_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_analysis_pht_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_analysis_pht4ss_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_analysis_sm4ss_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_pht1024_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_pht128_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_pht256_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_pht512_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_rs16KB_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_rs1KB_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_rs2KB_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_rs32KB_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_rs512B_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_rs64KB_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_sensitivity_rs8KB_prefetcher_cycle_operate();
[[]] void pref_prefetcherDgaze_ssonly_prefetcher_cycle_operate();
[[]] void pref_prefetcherDghb_prefetcher_cycle_operate();
[[]] void pref_prefetcherDip_stride_prefetcher_cycle_operate();
[[]] void pref_prefetcherDipcp_l1_prefetcher_cycle_operate();
[[]] void pref_prefetcherDipcp_l2_prefetcher_cycle_operate();
[[]] void pref_prefetcherDnext_line_prefetcher_cycle_operate();
[[]] void ipref_prefetcherDnext_line_instr_prefetcher_cycle_operate();
[[]] void pref_prefetcherDno_prefetcher_cycle_operate();
[[]] void ipref_prefetcherDno_instr_prefetcher_cycle_operate();
[[]] void pref_prefetcherDpc_prefetcher_cycle_operate();
[[]] void pref_prefetcherDpmp_prefetcher_cycle_operate();
[[]] void pref_prefetcherDregion_num_prefetcher_cycle_operate();
[[]] void pref_prefetcherDsms_prefetcher_cycle_operate();
[[]] void pref_prefetcherDspp_dev_prefetcher_cycle_operate();
[[]] void pref_prefetcherDspp_ppf_prefetcher_cycle_operate();
[[]] void pref_prefetcherDva_ampm_lite_prefetcher_cycle_operate();
[[]] void impl_prefetcher_cycle_operate();

[[]] void pref_prefetcherD1offset_prefetcher_final_stats();
[[]] void pref_prefetcherD2offset_prefetcher_final_stats();
[[]] void pref_prefetcherD3offset_prefetcher_final_stats();
[[]] void pref_prefetcherD4offset_prefetcher_final_stats();
[[]] void pref_prefetcherDberti_prefetcher_final_stats();
[[]] void pref_prefetcherDbingo_prefetcher_final_stats();
[[]] void pref_prefetcherDdspatch_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_analysis_pht_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_analysis_pht4ss_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_analysis_sm4ss_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_pht1024_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_pht128_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_pht256_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_pht512_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_rs16KB_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_rs1KB_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_rs2KB_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_rs32KB_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_rs512B_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_rs64KB_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_sensitivity_rs8KB_prefetcher_final_stats();
[[]] void pref_prefetcherDgaze_ssonly_prefetcher_final_stats();
[[]] void pref_prefetcherDghb_prefetcher_final_stats();
[[]] void pref_prefetcherDip_stride_prefetcher_final_stats();
[[]] void pref_prefetcherDipcp_l1_prefetcher_final_stats();
[[]] void pref_prefetcherDipcp_l2_prefetcher_final_stats();
[[]] void pref_prefetcherDnext_line_prefetcher_final_stats();
[[]] void ipref_prefetcherDnext_line_instr_prefetcher_final_stats();
[[]] void pref_prefetcherDno_prefetcher_final_stats();
[[]] void ipref_prefetcherDno_instr_prefetcher_final_stats();
[[]] void pref_prefetcherDpc_prefetcher_final_stats();
[[]] void pref_prefetcherDpmp_prefetcher_final_stats();
[[]] void pref_prefetcherDregion_num_prefetcher_final_stats();
[[]] void pref_prefetcherDsms_prefetcher_final_stats();
[[]] void pref_prefetcherDspp_dev_prefetcher_final_stats();
[[]] void pref_prefetcherDspp_ppf_prefetcher_final_stats();
[[]] void pref_prefetcherDva_ampm_lite_prefetcher_final_stats();
[[]] void impl_prefetcher_final_stats();


// Assert data prefetchers do not operate on branches
[[noreturn]] void pref_prefetcherD1offset_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherD2offset_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherD3offset_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherD4offset_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDberti_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDbingo_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDdspatch_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_analysis_pht_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_analysis_pht4ss_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_analysis_sm4ss_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_pht1024_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_pht128_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_pht256_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_pht512_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_rs16KB_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_rs1KB_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_rs2KB_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_rs32KB_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_rs512B_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_rs64KB_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_sensitivity_rs8KB_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDgaze_ssonly_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDghb_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDip_stride_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDipcp_l1_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDipcp_l2_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDnext_line_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDno_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDpc_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDpmp_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDregion_num_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDsms_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDspp_dev_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDspp_ppf_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[noreturn]] void pref_prefetcherDva_ampm_lite_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t) { throw std::runtime_error("Not implemented"); }
[[]] void ipref_prefetcherDnext_line_instr_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t);
[[]] void ipref_prefetcherDno_instr_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t);
[[]] void impl_prefetcher_branch_operate(uint64_t, uint8_t, uint64_t);
